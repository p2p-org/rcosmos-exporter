name: Release

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BINARY_NAME: rcosmos-exporter

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker/login-action@v1
      with:
        registry: ${{env.REGISTRY}}
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: build container
      run: |
        docker build --tag ${{ env.REGISTRY }}/${{ github.repository }}:${GITHUB_REF#refs/tags/} .
        docker tag ${{ env.REGISTRY }}/${{ github.repository }}:${GITHUB_REF#refs/tags/} ${{ env.REGISTRY }}/${{ github.repository }}:latest
        docker push ${{ env.REGISTRY }}/${{ github.repository }}:${GITHUB_REF#refs/tags/}
        docker push ${{ env.REGISTRY }}/${{ github.repository }}:latest
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - id: get_version
      run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/} | tr '.' '_')" >> $GITHUB_ENV

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev perl make

    - name: Build Release
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Rename binary with version
      run: |
        mv ./target/release/${{ env.BINARY_NAME }} ./target/release/${{ env.BINARY_NAME }}-${{ env.VERSION }}

    - name: Compress binary
      run: |
        tar -czvf ${{ env.BINARY_NAME }}-${{ env.VERSION }}.tar.gz -C ./target/release ${{ env.BINARY_NAME }}-${{ env.VERSION }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.BINARY_NAME }}-${{ env.VERSION }}.tar.gz
        asset_name: ${{ env.BINARY_NAME }}-${{ env.VERSION }}.tar.gz
        asset_content_type: application/gzip
  